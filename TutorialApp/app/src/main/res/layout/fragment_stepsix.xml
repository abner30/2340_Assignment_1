<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">
    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="0dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        android:fillViewport="true">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:padding="20dp">
            <TextView
                android:id="@+id/textView8"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="6. Add View and Constraints"
                android:textSize="20sp" />
            <TextView
                android:id="@+id/textView11"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="In this task, we will add 2 more buttons to the user interface and update the existing button."
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView9"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Step 1: View Constraint Properties"
                android:textSize="20sp" />
            <TextView
                android:id="@+id/textView12"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="1. In fragment_first.xml, look at the constraint properties for the TextView."
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <ImageView
                android:id="@+id/imageView7"
                android:layout_width="302dp"
                android:layout_height="104dp"
                app:srcCompat="@drawable/a6_1_1"
                android:paddingLeft="40dp"/>
            <TextView
                android:id="@+id/textView10"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Step 2: Add buttons and constrain their positions"
                android:textSize="20sp" />
            <TextView
                android:id="@+id/textView13"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="1. Notice the Palette at the top left of the layout editor. Move the sides if you need to, so that
you can see many of the items in the palette"
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView14"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="2. Click on some of the categories"
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView15"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="3. Select Button, which is near the top, and drag and drop it onto the design view, placing it
underneath the TextView near the other button"
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView16"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="4. Notice that a Button has been added to the Component Tree under ConstraintLayout"
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView17"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Step 3: Adjust Next Button"
                android:textSize="20sp" />
            <TextView
                android:id="@+id/textView18"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="In this section, you'll modify the 'Next' button generated by Android Studio in the project
creation. The constraint between the button and the TextView appears as a wavy line without
an arrow, indicating a chain that links two or more objects. You will remove the chained
constraints and replace them with regular constraints for the time being"
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView19"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="1. Delete the chain constraints"
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView20"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="a. Click on the Next button, and then delete the constraint from the top of the button to the
TextView."
                android:paddingTop="15dp"
                android:paddingLeft="40dp"/>
            <TextView
                android:id="@+id/textView21"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="b. Click on the TextView, and then delete the constraint from the bottom of the text to the Next
button."
                android:paddingTop="15dp"
                android:paddingLeft="40dp"/>
            <TextView
                android:id="@+id/textView22"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Step 4: Extract String Resources"
                android:textSize="20sp" />
            <TextView
                android:id="@+id/textView23"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="1. In the fragment_first.xml layout file, find the text property for the toast_button button."
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <ImageView
                android:id="@+id/imageView8"
                android:layout_width="302dp"
                android:layout_height="104dp"
                app:srcCompat="@drawable/a6_5_1"
                android:paddingLeft="40dp"/>
            <TextView
                android:id="@+id/textView24"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Take note that the text 'Button' is directly placed in the layout field, unlike the TextView which
references a string resource. This approach could complicate the translation of your app into
other languages"
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView25"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="2. Click the highlighted code, click the lightbulb and select Extract String Resource"
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView26"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="3. In the dialog box that appears, change the resource name to toast_button_text and the
resource value to Toast and click OK"
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView27"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Notice that the value of the android:text property has changed to @string/toast_button_text."
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView28"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="4. Go to the res > values > strings.xml file. Notice that a new string resource has been added,
named toast_button_text."
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView29"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="5. Run the app to make sure it displays as you expect it to."
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView31"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Step 5: Update Next Button"
                android:textSize="20sp" />
            <TextView
                android:id="@+id/textView30"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Follow the same procedure as you did for the Toast button to change the id of the Next
button to 'random_button' from 'button_first' in the Attributes panel. If a dialog box prompts
you to update all usages of the button, choose Yes to fix any other references in the project
code."
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView32"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="In the 'strings.xml' file, right-click on the corresponding string resource for 'Next.' Choose
Refactor > Rename... and modify the name to 'random_button_text.' Confirm the change by
clicking Refactor and closing the dialog."
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView33"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Alter the value of the string from 'Next' to 'Random.' Optionally, relocate
'random_button_text' below 'toast_button_text' if desired."
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView35"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Step 6: Add a third button"
                android:textSize="20sp" />
            <TextView
                android:id="@+id/textView34"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="1. In the 'fragment_first.xml' file, introduce another button below the TextView,
positioned between the Toast button and the Random button"
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView36"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="2. Apply vertical constraints identical to the existing buttons, connecting the top of the
new button to the bottom of the TextView and the bottom to the screen's bottom."
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView37"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="3. Establish horizontal constraints between the new button and the other buttons,
linking its left side to the right side of the Toast button and its right side to the left side
of the Random button"
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
            <TextView
                android:id="@+id/textView38"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="4. Review the XML code for 'fragment_first.xml' and check for the presence of the
attribute 'app:layout_constraintVertical_bias' for any buttons. The absence of this
constraint is acceptable."
                android:paddingTop="15dp"
                android:paddingLeft="20dp"/>
        </LinearLayout>
    </ScrollView>
</androidx.constraintlayout.widget.ConstraintLayout>